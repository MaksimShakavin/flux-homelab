---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 70.0.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: Skip
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: Skip
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: local-path-provisioner
      namespace: storage
    - name: thanos
      namespace: observability
  values:
    crds:
      enabled: false
    alertmanager:
      ingress:
        enabled: true
        pathType: Prefix
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: alertmanager.svg
          gethomepage.dev/name: Alertmanager
          gethomepage.dev/group: Observability
          gethomepage.dev/description: Manage prometheus alerts
        ingressClassName: internal
        hosts: [ "alertmanager.${SECRET_DOMAIN}" ]
      alertmanagerSpec:
        replicas: 2
        useExistingSecret: true
        configSecret: alertmanager-secret
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: local-hostpath
              resources:
                requests:
                  storage: 1Gi
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels: [ "__name__" ]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: drop
            sourceLabels: [ "__name__" ]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: [ "__name__" ]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
    kubeControllerManager:
      enabled: true
      endpoints: &cp
        - 192.168.20.51
        - 192.168.20.52
        - 192.168.20.53
    kubeEtcd:
      enabled: true
      endpoints: *cp
    kubeScheduler:
      enabled: true
      endpoints: *cp
    kubeProxy:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: prometheus.svg
          gethomepage.dev/name: Prometheus
          gethomepage.dev/group: Observability
          gethomepage.dev/description: Monitoring system
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        pathType: Prefix
        hosts: [ "prometheus.${SECRET_DOMAIN}" ]
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      prometheusSpec:
        image:
          registry: quay.io
          repository: prometheus/prometheus
          tag: v3.2.1
        maximumStartupDurationSeconds: 1000
        podMetadata:
          annotations:
            secret.reloader.stakater.com/reload: &secret thanos-objstore-config
        replicas: 2
        replicaExternalLabelName: __replica__
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures: # https://prometheus.io/docs/prometheus/latest/feature_flags/
          - auto-gomemlimit
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        thanos:
          image: quay.io/thanos/thanos:${THANOS_VERSION}
          version: "${THANOS_VERSION#v}"
          objectStorageConfig:
            existingSecret:
              name: *secret
              key: config
        retention: 2d
        retentionSize: 10GB
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 1500Mi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-hostpath
              resources:
                requests:
                  storage: 15Gi
    nodeExporter:
      enabled: true
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: [ "__meta_kubernetes_pod_node_name" ]
              targetLabel: kubernetes_node
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: [ "__meta_kubernetes_pod_node_name" ]
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Kubernetes
