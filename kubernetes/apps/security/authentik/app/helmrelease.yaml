---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: authentik
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 2025.4.1
  url: oci://ghcr.io/goauthentik/helm-charts/authentik
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authentik
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: authentik
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    global:
      podAnnotations:
        secret.reloader.stakater.com/reload: &secret authentik-secret
      deploymentStrategy:
        type: RollingUpdate
      env:
        - name: AUTHENTIK_POSTGRESQL__NAME
          value: *app
        - name: AUTHENTIK_POSTGRESQL__HOST
          value: authentik-pgbouncer.security.svc #Authentik requires transaction for pgBouncer
        - name: AUTHENTIK_POSTGRESQL__USER
          value: *app
        - name: AUTHENTIK_POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-pguser-authentik
              key: password
        - name: AUTHENTIK_POSTGRESQL__USE_PGBOUNCER
          value: "true"
        - name: AUTHENTIK_POSTGRESQL__SSLMODE
          value: require
      envFrom:
        - secretRef:
            name: *secret
    authentik:
      redis:
        host: dragonfly.database.svc.cluster.local
    server:
      autoscaling:
        enabled: true
        minReplicas: 2
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      ingress:
        enabled: false
    worker:
      autoscaling:
        enabled: true
        minReplicas: 2
    prometheus:
      rules:
        enabled: true
