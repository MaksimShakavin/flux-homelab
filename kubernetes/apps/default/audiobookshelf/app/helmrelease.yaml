---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app audiobookshelf
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      # Retries is the number of retries that should be attempted on failures before bailing. Remediation, using an uninstall, is performed between each attempt.
      retries: 3
  upgrade:
    # CleanupOnFail allows deletion of new resources created during the Helm rollback action when it fails
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  # Generally storage dependencies goes here
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: storage
  values:
    controllers:
      audiobookshelf:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.16.0
            env:
              TZ: "${TIMEZONE}"
              PORT: &port 8080
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
              AUDIOBOOKSHELF_UID: &uid 1000
              AUDIOBOOKSHELF_GID: &gid 1000
            envFrom:
              - secretRef:
                  name: audiobookshelf-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: *port
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ "ALL" ] }
            resources:
              requests:
                cpu: 50m
              limits:
                memory: 600Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: *uid
        runAsGroup: *gid
        fsGroup: *gid
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: audiobookshelf
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Documents
          gethomepage.dev/name: Audiobookshelf
          gethomepage.dev/icon: audiobookshelf.svg
          gethomepage.dev/widget.type: audiobookshelf
          gethomepage.dev/widget.url: http://audiobookshelf.default:8080
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_AUDIOBOOKSHELF_TOKEN}}`}}"
        className: external
        hosts:
          - host: "audiobooks.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
      audiobooks:
        type: nfs
        server: "${NAS_URL}"
        path: "${NAS_PATH}/media/audiobooks"
