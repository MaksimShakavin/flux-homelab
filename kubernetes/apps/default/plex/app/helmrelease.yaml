---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.42.2.10156@sha256:9ad8a3506e1d8ebda873a668603c1a2c10e6887969564561be669efd65ae8871
            env:
              TZ: "Europe/Warsaw"
              PLEX_ADVERTISE_URL: "https://plex.exelent.click:443,http://192.168.20.65:32400"
              PLEX_NO_AUTH_NETWORKS: 192.168.10.0/24
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: &port 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                memory: 8Gi
        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            supplementalGroups: [ 44, 107, 1000 ]
    service:
      app:
        controller: plex
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: 192.168.20.65
        ports:
          http:
            port: 32400
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.exelent.click"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
            filters:
              - type: RequestHeaderModifier
                requestHeaderModifier:
                  remove: [ "Range" ]
            matches:
              - path:
                  type: PathPrefix
                  value: /library/streams
          - backendRefs:
              - identifier: app
                port: *port
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: "Media & Downloading"
          gethomepage.dev/name: Plex
          gethomepage.dev/icon: plex.png
          gethomepage.dev/description: Media Player
          gethomepage.dev/weight: "1"
          gethomepage.dev/widget.type: plex
          gethomepage.dev/widget.url: http://plex.default.svc.cluster.local:32400
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PLEX_TOKEN}}` }}"
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      # Separate PVC for cache to avoid backing up cache files
      plex-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      media:
        type: nfs
        server: "192.168.20.5"
        path: "/volume1/kubernetes/media"
        globalMounts:
          - path: /media
            readOnly: true
      tmpfs:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server/Logs
                subPath: logs
              - path: /transcode
                subPath: transcode
              - path: /tmp
                subPath: tmp
