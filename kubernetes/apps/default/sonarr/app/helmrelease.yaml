---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: storage
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: sonarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.11.2743@sha256:7227b81844d1aa6cb8242b325eb30f9113d10c2fc446db4ca7207c892e49e72b
            env:
              TZ: "${TIMEZONE}"
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__SERVER__PORT: &port 8080
              SONARR__SERVER__URLBASE: "https://sonarr.${SECRET_DOMAIN}"
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__APP__THEME: dark
            envFrom: *envFrom
            resources:
              requests:
                cpu: 500m
                memory: 500Mi
              limits:
                memory: 2000Mi
    service:
      app:
        controller: sonarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: sonarr.png
          gethomepage.dev/name: Sonarr
          gethomepage.dev/group: Media
          gethomepage.dev/description: TV Downloads
          gethomepage.dev/widget.type: sonarr
          gethomepage.dev/widget.url: http://sonarr.default.svc.cluster.local:8080
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_SONARR_TOKEN}}` }}"
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        hosts:
          - host: "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      downloads:
        type: nfs
        server: "${NAS_URL}"
        path: "${NAS_PATH}"
        globalMounts:
          - path: /data
