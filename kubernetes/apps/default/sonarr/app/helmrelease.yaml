---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: default
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: storage
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.14.2938@sha256:95c3d63b46c2ff242a0b646086da557a13ef1376f415bb755b9d87c0d94d0330
            env:
              TZ: "Europe/Warsaw"
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__SERVER__PORT: &port 8080
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__UPDATE__BRANCH: develop
              # Database
              SONARR__POSTGRES__HOST: sonarr-pgbouncer.default.svc
              SONARR__POSTGRES__PORT: "5432"
              SONARR__POSTGRES__USER: *app
              SONARR__POSTGRES__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: sonarr-pguser-sonarr
                    key: password
              SONARR__POSTGRES__MAINDB: sonarr
            envFrom:
              - secretRef:
                  name: sonarr-secret
            resources:
              requests:
                cpu: 500m
                memory: 500Mi
              limits:
                memory: 2000Mi
    service:
      app:
        controller: sonarr
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.exelent.click"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: sonarr.png
          gethomepage.dev/name: Sonarr
          gethomepage.dev/group: "Media & Downloading"
          gethomepage.dev/description: TV Downloads
          gethomepage.dev/weight: "5"
          gethomepage.dev/widget.type: sonarr
          gethomepage.dev/widget.url: http://sonarr.default.svc.cluster.local:8080
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_SONARR_TOKEN}}` }}"
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      downloads:
        type: nfs
        server: "192.168.20.5"
        path: "/volume1/kubernetes"
        globalMounts:
          - path: /data
