---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: qbit-manage
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: qbit-manage-secret
    template:
      engineVersion: v2
      data:
        config.yaml: |
          # This is an example configuration file that documents all the options.
          # It will need to be modified for your specific use case.
          # Please refer to the link below for more details on how to set up the configuration file
          # https://github.com/StuffAnThings/qbit_manage/wiki/Config-Setup

          commands:
            # The commands defined below will IGNORE any commands used in command line and docker env variables.
            dry_run: False
            cross_seed: False
            recheck: True # Recheck paused torrents sorted by lowest size. Resume if Completed.
            cat_update: False
            tag_update: True
            rem_unregistered: False
            tag_tracker_error: True
            rem_orphaned: False
            tag_nohardlinks: True
            share_limits: False
            skip_qb_version_check: True
            skip_cleanup: True

          qbt:
            # qBittorrent parameters
            host: "qbittorrent.default.svc.cluster.local:8080"
            user: {{ .qbittorrent_username }}
            pass: {{ .qbittorrent_password }}

          settings:
            force_auto_tmm: False # Will force qBittorrent to enable Automatic Torrent Management for each torrent.
            tracker_error_tag: issue # Will set the tag of any torrents that do not have a working tracker.
            nohardlinks_tag: noHL # Will set the tag of any torrents with no hardlinks.
            stalled_tag: stalledDL # Will set the tag of any torrents stalled downloading.
            share_limits_tag: ~share_limit # Will add this tag when applying share limits to provide an easy way to filter torrents by share limit group/priority for each torrent
            share_limits_min_seeding_time_tag: MinSeedTimeNotReached # Tag to be added to torrents that have not yet reached the minimum seeding time
            share_limits_min_num_seeds_tag: MinSeedsNotMet # Tag to be added to torrents that have not yet reached the minimum number of seeds
            share_limits_last_active_tag: LastActiveLimitNotReached # Tag to be added to torrents that have not yet reached the last active limit
            cross_seed_tag: cross-seed # Will set the tag of any torrents that are added by cross-seed command
            cat_filter_completed: True # Filters for completed torrents only when running cat_update command
            share_limits_filter_completed: True # Filters for completed torrents only when running share_limits command
            tag_nohardlinks_filter_completed: True # Filters for completed torrents only when running tag_nohardlinks command
            rem_unregistered_filter_completed: False # Filters for completed torrents only when running rem_unregistered command
            cat_update_all: True # Checks and udpates all torrent categories if set to True when running cat_update command, otherwise only update torrents that are uncategorized
            tag_stalled_torrents: True # Tags any downloading torrents that are stalled with the `stalledDL` tag when running the tag_update command

          directory:
            # Do not remove these
            # Cross-seed var: </your/path/here/>  # Output directory of cross-seed
            # root_dir var: </your/path/here/>  # Root downloads directory used to check for orphaned files, noHL, and RecycleBin.
            # <OPTIONAL> remote_dir var: </your/path/here/>  # Path of docker host mapping of root_dir.
            # remote_dir must be set if you're running qbit_manage locally and qBittorrent/cross_seed is in a docker
            # remote_dir should not be set if qbit_manage is running in a container
            # <OPTIONAL> recycle_bin var: </your/path/here/>   # Path of the RecycleBin folder. Default location is set to remote_dir/.RecycleBin
            # <OPTIONAL> torrents_dir var: </your/path/here/>  # Path of the your qbittorrent torrents directory. Required for `save_torrents` attribute in recyclebin
            # <OPTIONAL> orphaned_dir var: </your/path/here/>  # Path of the the Orphaned Data folder. This is similar to RecycleBin, but only for orphaned data.
            cross_seed: "/your/path/here/"
            root_dir: "/data/torrents/"
            remote_dir: /data/torrents/
            recycle_bin: "/mnt/user/data/torrents/.RecycleBin"
            torrents_dir: "/qbittorrent/data/BT_backup"

          cat:
            # Category & Path Parameters
            # <Category Name> : <save_path>  # Path of your save directory.
            movies: "/data/torrents/movies"
            tv: "/data/torrents/tv"
            guardian: "/data/torrents/guardian"

          cat_change:
            # This moves all the torrents from one category to another category. This executes on --cat-update
            # WARNING: if the paths are different and Default Torrent Management Mode is set to automatic the files could be moved !!!
            # <Old Category Name> : <New Category>

          tracker:
            # Mandatory
            # Tag Parameters
            # <Tracker URL Keyword>:    # <MANDATORY> This is the keyword in the tracker url. You can define multiple tracker urls by splitting with `|` delimiter
            # <MANDATORY> Set tag name. Can be a list of tags or a single tag
            #   tag: <Tag Name>
            # <OPTIONAL> Set the category based on tracker URL. This category option takes priority over the category defined by save directory
            #   cat: <Category Name>
            # <OPTIONAL> Set this to the notifiarr react name. This is used to add indexer reactions to the notifications sent by Notifiarr
            #   notifiarr: <notifiarr indexer>
            bt.t-ru|bt.rutracker.cx|bt2.t-ru|bt2.rutracker.cx|bt3.t-ru|bt3.rutracker.cx|bt4.t-ru|bt4.rutracker.cx:
              tag: rutracker
              notifiarr: rutracker
            # The "other" key is a special keyword and if defined will tag any other trackers that don't match the above trackers into this tag
            other:
              tag: other

          nohardlinks:
            # Tag Movies/Series that are not hard linked outside the root directory
            # Mandatory to fill out directory parameter above to use this function (root_dir/remote_dir)
            # This variable should be set to your category name of your completed movies/completed series in qbit. Acceptable variable can be any category you would like to tag if there are no hardlinks found
            movies:
            tv:

          share_limits:
            # Control how torrent share limits are set depending on the priority of your grouping
            # Each torrent will be matched with the share limit group with the highest priority that meets the group filter criteria.
            # Each torrent can only be matched with one share limit group
            # This variable is mandatory and is a text defining the name of your grouping. This can be any string you want
            noHL:
              priority: 1
              include_all_tags:
                - noHL
              min_num_seeds: 3
              cleanup: false
            default:
              priority: 999
              max_ratio: -1
              max_seeding_time: -1
              cleanup: false

          recyclebin:
            # Recycle Bin method of deletion will move files into the recycle bin (Located in /root_dir/.RecycleBin) instead of directly deleting them in qbit
            # By default the Recycle Bin will be emptied on every run of the qbit_manage script if empty_after_x_days is defined.
            enabled: false
            # <OPTIONAL> empty_after_x_days var:
            # Will automatically remove all files and folders in recycle bin after x days. (Checks every script run)
            # If this variable is not defined it, the RecycleBin will never be emptied.
            # WARNING: Setting this variable to 0 will delete all files immediately upon script run!
            empty_after_x_days: 60
            # <OPTIONAL> save_torrents var:
            # If this option is set to true you MUST fill out the torrents_dir in the directory attribute.
            # This will save a copy of your .torrent and .fastresume file in the recycle bin before deleting it from qbittorrent
            save_torrents: true
            # <OPTIONAL> split_by_category var:
            # This will split the recycle bin folder by the save path defined in the `cat` attribute
            # and add the base folder name of the recycle bin that was defined in the `recycle_bin` sub-attribute under directory.
            split_by_category: false

          orphaned:
            # Orphaned files are those in the root_dir download directory that are not referenced by any active torrents.
            # Will automatically remove all files and folders in orphaned data after x days. (Checks every script run)
            # If this variable is not defined it, the orphaned data will never be emptied.
            # WARNING: Setting this variable to 0 will delete all files immediately upon script run!
            empty_after_x_days: 0
            # File patterns that will not be considered orphaned files. Handy for generated files that aren't part of the torrent but belong with the torrent's files
            exclude_patterns:
              - "**/.DS_Store"
              - "**/Thumbs.db"
              - "**/@eaDir"
              - "/data/torrents/.torrents/**"
              - "/data/torrents/temp/**"
              - "**/*.!qB"
              - "**/*_unpackerred"

          apprise:
            # Apprise integration with webhooks
            # Leave Empty/Blank to disable
            # Mandatory to fill out the url of your apprise API endpoint
            # api_url: http://apprise-api:8000
            # Mandatory to fill out the notification url/urls based on the notification services provided by apprise. https://github.com/caronc/apprise/wiki
            # notify_url:

          notifiarr:
            # Notifiarr integration with webhooks
            # Leave Empty/Blank to disable
            # Mandatory to fill out API Key
            apikey: {{ .notifiarr_qbit_api_key }}
            # <OPTIONAL> Set to a unique value (could be your username on notifiarr for example)
            instance:

          webhooks:
            # Webhook notifications:
            # Possible values:
            # Set value to notifiarr if using notifiarr integration
            # Set value to apprise if using apprise integration
            # Set value to a valid webhook URL
            # Set value to nothing (leave Empty/Blank) to disable
            error: notifiarr
            run_start: notifiarr
            run_end: notifiarr
            function:
              cross_seed: notifiarr
              recheck: notifiarr
              cat_update: notifiarr
              tag_update: notifiarr
              rem_unregistered: notifiarr
              tag_tracker_error: notifiarr
              rem_orphaned: notifiarr
              tag_nohardlinks: notifiarr
              share_limits: notifiarr
              cleanup_dirs: notifiarr
  dataFrom:
    - extract:
        key: qbittorrent
      rewrite:
        - regexp:
            source: "(.*)"
            target: "qbittorrent_$1"
    - extract:
        key: notifiarr
      rewrite:
        - regexp:
            source: "(.*)"
            target: "notifiarr_$1"
