---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: storage
  values:
    controllers:
      paperless:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: paperless-secret
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.11.0@sha256:da0476cea301df8bc8d20739f0e76de1e77d91ad2c9170b45c803468dde19208
            env:
              PAPERLESS_TIME_ZONE: "${TIMEZONE}"
              PAPERLESS_URL: "https://paperless.${SECRET_DOMAIN}"
              PAPERLESS_PORT: &port 8000
              PAPERLESS_REDIS: redis://dragonfly.database.svc.cluster.local:6379
              PAPERLESS_TIKA_ENABLED: true
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_LOGROTATE_MAX_BACKUPS: 0 #disable logging backup since anyway is done by locki
              PAPERLESS_OCR_LANGUAGE: rus+pol+eng
              PAPERLESS_OCR_LANGUAGES: pol rus
            envFrom: *envFrom
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-minimal@sha256:20db3df89eaeb1b271dd840888fe909b88b12f4b86ef641ec07a1d45d4c5168f
          gotenburg:
            image:
              repository: gotenberg/gotenberg
              tag: 8.8.1@sha256:b1854afefad44a4004bdad5a69a10b39a4567a3234746e7095d06d44f4f3fab7
            securityContext:
              privileged: false
              runAsUser: 1001
    service:
      app:
        controller: paperless
        ports:
          http:
            port: *port
    ingress:
      app:
        className: external
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: paperless-ngx.png
          gethomepage.dev/name: Paperless
          gethomepage.dev/group: Storage
          gethomepage.dev/description: Document management
          gethomepage.dev/widget.type: paperlessngx
          gethomepage.dev/widget.url: http://paperless.default.svc.cluster.local:8000
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PAPERLESS_TOKEN}}` }}"
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: "paperless.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /usr/src/paperless/data
      files:
        type: nfs
        server: "${NAS_URL}"
        path: "${NAS_PATH}/paperless"
        globalMounts:
          - subPath: media
            path: /usr/src/paperless/media
          - subPath: export
            path: /usr/src/paperless/export
          - subPath: consume
            path: /usr/src/paperless/consume
      tmp:
        enabled: true
        type: emptyDir
