---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: storage
  values:
    controllers:
      paperless:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.16.3@sha256:5622c95b4e22c6b95d4791563d8ace03ae16e3147e2cdf2016b938dc9341d30a
            env:
              PAPERLESS_TIME_ZONE: "Europe/Warsaw"
              PAPERLESS_URL: "https://paperless.exelent.click"
              PAPERLESS_PORT: &port 8000
              PAPERLESS_REDIS: redis://dragonfly.database.svc.cluster.local:6379
              PAPERLESS_TIKA_ENABLED: true
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_LOGROTATE_MAX_BACKUPS: 0 #disable logging backup since anyway is done by locki
              PAPERLESS_OCR_LANGUAGE: rus+pol+eng
              PAPERLESS_OCR_LANGUAGES: pol rus
              # Database
              PAPERLESS_DBENGINE: postgresql
              PAPERLESS_DBPORT: "5432"
              PAPERLESS_DBHOST: paperless-pgbouncer.default.svc
              PAPERLESS_DBUSER: *app
              PAPERLESS_DBNAME: *app
              PAPERLESS_DBPASS:
                valueFrom:
                  secretKeyRef:
                    name: paperless-pguser-paperless
                    key: password
            envFrom:
              - secretRef:
                  name: paperless-secret
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-minimal@sha256:20db3df89eaeb1b271dd840888fe909b88b12f4b86ef641ec07a1d45d4c5168f
          gotenburg:
            image:
              repository: gotenberg/gotenberg
              tag: 8.20.1@sha256:cda4386c7ed38f18bc6897828be01ba7361c99929a5c84ec5e293d7916e29bac
            securityContext:
              privileged: false
              runAsUser: 1001
    service:
      app:
        controller: paperless
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.exelent.click"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: paperless-ngx.png
          gethomepage.dev/name: Paperless
          gethomepage.dev/group: "Home Apps"
          gethomepage.dev/description: Document management
          gethomepage.dev/weight: "1"
          gethomepage.dev/widget.type: paperlessngx
          gethomepage.dev/widget.url: http://paperless.default.svc.cluster.local:8000
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PAPERLESS_TOKEN}}` }}"
    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /usr/src/paperless/data
      files:
        type: nfs
        server: "192.168.20.5"
        path: "/volume1/kubernetes/paperless"
        globalMounts:
          - subPath: media
            path: /usr/src/paperless/media
          - subPath: export
            path: /usr/src/paperless/export
          - subPath: consume
            path: /usr/src/paperless/consume
      tmp:
        enabled: true
        type: emptyDir
